library(quantstrat)
rm(list=ls(all=TRUE))
stock.st = c("2330.TW")
currency("TWD")
stock(stock.st, currency="TWD",multiplier=1)
oldtz<-Sys.getenv('TZ')
Sys.setenv(TZ="Asia/Taipei")
initDate = '2006-12-31'
startDate = '2007-01-01'
endDate = '2016-06-15'
initEq=1e6
tradeSize = initEq/10
getSymbols(stock.st,from=startDate,to=endDate,index.class="POSIXct",adjust=T)
myTheme<-chart_theme()
myTheme$col$dn.col <-'lightblue'
myTheme$col$dn.border <- 'lightgray'
myTheme$col$up.border <- 'lightgray'
chart_Series(get(stock.st),name=stock.st,theme=myTheme)
osFixedDollar <- function(timestamp, orderqty, portfolio, symbol, ruletype, ...)
{
pos <- getPosQty(portfolio, symbol, timestamp)
if( isTRUE(all.equal(pos,0)) )
{
ClosePrice <- as.numeric(Cl(mktdata[timestamp,]))
orderqty <- sign(orderqty)*round(tradeSize/ClosePrice,-2)
} else {
orderqty <- 0
}
return(orderqty)
}
strat.st <- "bbands"
if (!exists('.blotter')) .blotter <- new.env()
if (!exists('.strategy')) .strategy <- new.env()
strategy(strat.st, store=TRUE)
add.indicator(strat.st, name = "BBands",
arguments = list(HLC = quote(HLC(mktdata)), maType='SMA'), label='BBands')
add.signal(strat.st, name="sigCrossover",
arguments=list(columns=c("Close","up"),relationship="gt"),
label="Cl.gt.UpperBand")
add.signal(strat.st, name="sigCrossover",
arguments=list(columns=c("Close","dn"),relationship="lt"),
label="Cl.lt.LowerBand")
add.signal(strat.st, name="sigCrossover",
arguments=list(columns=c("High","Low","mavg"),relationship="op"),
label="Cross.Mid")
add.rule(strat.st, name='ruleSignal',
arguments=list(sigcol="Cl.gt.UpperBand",sigval=TRUE, orderqty=-1000,
ordertype='market', orderside=NULL, threshold=NULL, osFUN=osFixedDollar,
orderset='ocoshort'),
type='enter',label="SE")
add.rule(strat.st, name='ruleSignal',
arguments=list(sigcol="Cl.lt.LowerBand",sigval=TRUE, orderqty= 1000,
ordertype='market', orderside=NULL, threshold=NULL, osFUN=osFixedDollar,
orderset='ocolong'),
type='enter',label="LE")
add.rule(strat.st, name='ruleSignal',
arguments=list(sigcol="Cross.Mid",sigval=TRUE, orderqty= 'all',
ordertype='market', TxnFees=-120, orderside=NULL, threshold=NULL),
type='exit')
add.distribution(strat.st,
paramset.label = 'BBOPT',
component.type = 'indicator',
component.label = 'BBands',
variable = list(n = seq(10,30,by=5)),
label = 'n'
)
add.distribution(strat.st,
paramset.label = 'BBOPT',
component.type = 'indicator',
component.label = 'BBands',
variable = list(sd = seq(1,3,by=0.5)),
label = 'sd'
)
if( Sys.info()['sysname'] == "Windows" )
{
library(parallel)
# uncomment line below when combine function bug is fixed for Windows
# registerDoParallel(cores=detectCores())  ## to-be-resolved by Julian
} else {
library(doMC)
registerDoMC(cores=detectCores())
}
rm.strat("opt")
initPortf(name="opt", stock.st, initDate=initDate)
initAcct(name="opt", portfolios="opt",
initDate=initDate, initEq=initEq)
initOrders(portfolio="opt", initDate=initDate)
results <- walk.forward(
strategy.st=strat.st,
paramset.label='BBOPT',
portfolio.st="opt",
account.st="opt",
period='years',
k.training=4,
k.testing=1,
nsamples=0,
audit.prefix='wfa',
anchored=FALSE,
verbose=TRUE
)
